### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Error {
  key: String
  message: String
}

"""The differents error codes the api will return if needed"""
enum ErrorCode {
  BAD_REQUEST
  UNAUTHORIZED
}

"""The differents error message the api will return if needed"""
enum ErrorMessage {
  UNABLE_TO_PROCESS_REQUEST_DUE_TO_CLIENT_ERROR
  UNAUTHENTICATED_PLEASE_LOGIN
}

type InvalidArgumentsError {
  code: ErrorCode
  invalidArguments: [Error]
  message: ErrorMessage
}

type Mutation {
  createUser(email: String!, id: String!, username: String!, verified: Boolean! = false): UserResult
}

type Query {
  userById(id: ID!): User
  users: [User]
}

type User {
  email: String
  id: ID
  username: String
  verified: Boolean
}

type UserAuthenticationError {
  code: ErrorCode
  message: ErrorMessage
}

"""Return a user or user related errors"""
union UserResult = InvalidArgumentsError | User | UserAuthenticationError
